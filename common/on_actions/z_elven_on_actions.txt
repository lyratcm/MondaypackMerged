on_game_start = {
    events = {
		# Prescripted megastructures setup
		elven_setup.11
		elven_setup.12
		elven_setup.13

		

		# Drow FE ruler is female
		elven_leader_events.4

		# Rename colonies for advanced empires
		elven_colony_events.12

		# Additional consumer goods for elves
		elven_setup.7
    }
}

on_game_start_country = {
	events = {
		# Setup custom capital worlds and deposits.
		elven_setup.2
		
		# Setup Arcadian Symbiosis origin start
		elven_setup.31

		# Setup Prismatic Refuge origin start
		elven_setup.32

		# Give Relics to origins that start with one
		elven_relic_events.0

		# Recalculates Celestial Favor (Celestial Grace civic)
		elven_celestial_grace_events.1
	}
}

empire_init_capital_planet = {
	events = {
		
	}
}

on_monthly_pulse = {
	events = {
	    # Drow "accidents"
        elven_accident_events.10
	}
}

on_monthly_pulse_country = {
	events = {
	    # Recalculate treant habitability bonus (Arcadian Symbiosis origin)
		elven_pop_events.3
		
		# Recalculates Celestial Favor (Celestial Grace civic)
		elven_celestial_grace_events.1
	}
}

on_yearly_pulse = {
	events = {
		# Xenocidal ticks
		elven_pop_events.1

		# Substance abuser check
		elven_leader_events.31
	}
}

# Avari ring relearning modifier change.
on_five_year_pulse = {
	events = {
		#Substance abuser check
		elven_leader_events.31
	}
}

on_leader_spawned = {
	events = {
		elven_leader_events.1
		elven_leader_events.21
		elven_leader_events.22
		elven_leader_events.23
		elven_leader_events.24
	}
}

on_colonization_started = {
	events = {
		# Rename colonies for common countries
		elven_colony_events.11
	}
}

on_planet_transfer = {
	events = {
		# Switch planetary deposits to blockers and back if needed
		elven_colony_events.2

		# Celestial Factor: Colony Lost
		elven_celestial_grace_events.109
	}
}

on_colonized = {
	events = {
		# Switch planetary deposits to blockers and back if needed
		elven_colony_events.2

		# Celestial Factor: New Colony
		elven_celestial_grace_events.102
	}
}

# A colony has been destroyed. Called just before owner and controller is cleared
# Scope = Planet
on_colony_destroyed = {
	events = {
		# Celestial Factor: Colony Lost
		elven_celestial_grace_events.108
	}
}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		elven_colony_events.21
	}
}

on_survey = {
	events = {
		# Arcane Societies get another dice roll for a tiny chance to spawn an archaeological site.
		elven_misc_events.1
	}
}

# THIS = Fleet
# FROM = System jumping to
# FROMFROM = System jumped from
on_entering_wormhole = {
	events = {
		# Prismatic refugees establish contact with a FE.
		elven_misc_events.2
	}
}

# A leader leveled up.
# Scope = Country
# From = Leader
on_leader_level_up = {
	events = {
		# Celestial Factor: Ruler levelled up
		elven_celestial_grace_events.101
	}
}

# A Megastructure has been built
# Root = Country
# From = Megastructure
# FromFrom = System
# FromFromFrom = Fleet
on_megastructure_built = {
	events = {
		# Celestial Factor: Megastructure Built
		elven_celestial_grace_events.103
	}
}

# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgraded = {
	events = {
		# Celestial Factor: Megastructure Upgraded
		elven_celestial_grace_events.104
	}
}

# A war has been won
# Root = Winner Warleader
# From = Loser Warleader
# FromFrom = War
on_war_won = {
	events = {
		elven_celestial_grace_events.105
	}
}

# A war has been lost
# Root = Loser Warleader
# From = Winner Warleader
# FromFrom = War
on_war_lost = {
	events = {
		elven_celestial_grace_events.107
	}
}

# A status quo has been signed
# Root = Actor
# From = Recipient
# FromFrom = Main Attacker
# FromFromFrom = Main Defender
# FromFromFromFrom = War
on_status_quo = {
	events = {
		elven_celestial_grace_events.106
	}
}

# A status quo has been signed, by force
# Root = Recipient
# From = Actor
# FromFrom = Main Attacker
# FromFromFrom = Main Defender
# FromFromFromFrom = War
on_status_quo_forced = {
	events = {
		elven_celestial_grace_events.106
	}
}

# From = system
# FromFrom = country (new owner)
# This = country (previous owner)
on_system_lost = {
	events = {
		elven_celestial_grace_events.110
	}
}