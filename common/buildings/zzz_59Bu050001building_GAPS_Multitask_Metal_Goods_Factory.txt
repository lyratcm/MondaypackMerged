building_GAPS_Multitask_Metal_Goods_Factory = {
    icon = "building_GAPS_Multitask_Metal_Goods_FactoryT1"
    base_buildtime = 240
    can_be_ruined = no
    category = research
    potential = {
        owner = {
            has_civic = Civic_GAPS_Multitaskers
        }
    }
    resources = {
        category = planet_buildings
        cost = {
            minerals = 400
            rare_crystals = 0
            volatile_motes = 0
        }
        upkeep = {
            energy = 1.5
            rare_crystals = 0
            volatile_motes = 0
        }
    }
    upgrades = {
        "building_GAPS_Multitask_Metal_Goods_Factory_2"
    }
    destroy_trigger = {
        OR = {
            has_modifier = slave_colony
            has_modifier = resort_colony
            buildings_no_crystals = yes
            buildings_no_motes = yes
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                is_gestalt = no
            }
            is_capital = yes
        }
        modifier = {
            job_GAPS_Multitask_Crafter_add = 1
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                is_gestalt = no
            }
        }
        modifier = {
            job_GAPS_Multitask_Crafter_add = 2
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                is_gestalt = yes
            }
            is_capital = yes
        }
        modifier = {
            job_GAPS_Multitask_Crafter_Drone_add = 1
        }
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = {
                is_gestalt = yes
            }
        }
        modifier = {
            job_GAPS_Multitask_Crafter_Drone_add = 2
        }
    }
    ai_weight = {
        weight = 0
    }
    ai_resource_production = {
        food = 1
        trigger = {
            always = yes
        }
    }
}
